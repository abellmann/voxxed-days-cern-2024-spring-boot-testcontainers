plugins {
  id 'java'
  id 'org.springframework.boot' version '3.2.1'
  id 'io.spring.dependency-management' version '1.1.4'
  id 'idea'
  id 'com.google.cloud.tools.jib' version '3.4.0'
}

group = 'com.voxxeddays.cern'
version = '0.0.1-SNAPSHOT'

java {
  sourceCompatibility = '21'
}

idea {
  module {
    downloadJavadoc = true
    downloadSources = true
  }
}

repositories {
  mavenCentral()
}

dependencies {
  implementation 'org.springframework.boot:spring-boot-starter-actuator'
  implementation 'org.springframework.boot:spring-boot-starter-web'
  implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
  implementation 'org.springframework.kafka:spring-kafka'
  implementation 'org.flywaydb:flyway-core'

  implementation 'org.springframework.boot:spring-boot-docker-compose'

  runtimeOnly 'org.postgresql:postgresql'

  testImplementation 'org.springframework.boot:spring-boot-starter-test'
  testImplementation 'org.springframework.boot:spring-boot-testcontainers'
  testImplementation 'org.springframework.kafka:spring-kafka-test'
  testImplementation 'org.testcontainers:junit-jupiter'
  testImplementation 'org.testcontainers:kafka'
  testImplementation 'org.testcontainers:postgresql'
  testImplementation 'org.assertj:assertj-core:3.24.2'
  testImplementation 'io.rest-assured:rest-assured:5.3.1'
  testImplementation 'org.awaitility:awaitility:4.2.0'
}

dependencyManagement {
  imports {
    mavenBom "org.testcontainers:testcontainers-bom:${testcontainersVersion}"
  }
}

jib.from.image ="eclipse-temurin:21-jre"
jib.to.image = "spring-boot-testcontainers"

tasks.named('test') {
  useJUnitPlatform()
}

tasks.named('bootBuildImage') {
  if (System.getProperty( "os.arch" ).toLowerCase().startsWith('aarch')) {
    // This builder is only for ARM64 systems.
    // For more info: https://github.com/dashaun/paketo-arm64
    builder = "docker.io/dashaun/builder:base"
  } else {
    builder = "docker.io/paketobuildpacks/builder-jammy-base"
  }

  imageName = "spring-boot-testcontainers"
  environment = ["BP_LIVE_RELOAD_ENABLED": "true"]
}
